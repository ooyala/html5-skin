import React, { Component } from 'react';
import PropTypes from 'prop-types';
import MarkerText from './markerText';

const TYPES = {
  TEXT: 'text',
  IMAGE: 'image',
  ICON: 'icon',
  TEXT_IMAGE: 'textImage',
  TEXT_ICON: 'textIcon'
}

class markerContainer extends Component {
  constructor(props) {
    super(props);
    this.types = this.props.types;
  }

  // componentWillMount() {

  // }

  // componentDidMount() {

  // }

  // componentWillReceiveProps(nextProps) {

  // }

  // shouldComponentUpdate(nextProps, nextState) {

  // }

  // componentWillUpdate(nextProps, nextState) {

  // }

  // componentDidUpdate(prevProps, prevState) {

  // }

  // componentWillUnmount() {

  // }

  createMarkers() {
    let markers = [];
    this.props.data.forEach((marker, index)=> {
      let icon;
      switch (marker.type) {
        case TYPES.TEXT:
          icon = (
            <MarkerText 
              key={index} 
              duration={this.props.duration}
              scrubberWidth={this.props.scrubberWidth}
              data={marker}
            />
          )
          break;
      
        default:
          icon = (<div key={index}/>)
          break;
      }
    });
  }

  render() {
    console.log('[marker-icons]', this.props.data, this.types);
    let markers = this.createMarkers();
    return (
      <div id="markerContainer">
        {markers}
      </div>
    );
  }
}

markerContainer.propTypes = {

};

export default markerContainer;