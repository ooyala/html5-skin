
@mixin highlight-base() {
  opacity: 1;
  // HEADSUP
  // This is currently the same style as the one used in utils.js.
  // We should change both styles whenever we update this.
  text-shadow: 0px 0px 3px rgba(255, 255, 255, 0.5), 0px 0px 6px rgba(255, 255, 255, 0.5), 0px 0px 9px rgba(255, 255, 255, 0.5);
}

@mixin highlight() {
  &:hover {
    @include highlight-base();
  }
}

@mixin highlight-tab() {
  box-shadow: 0 0 0 2px $blue-light;
}

@mixin remove-highlight-tab() {
  box-shadow: none;
}

@mixin border-radius($radius: $border-radius) {
  border-radius: $radius;
}

@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}

@mixin transition($transition...) {
  transition: $transition;
}

@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Center-align a block level element
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin pull-left {
  float: left !important;
}

@mixin pull-right {
  float: right !important;
}

// Text truncate
// Requires inline-block or block for proper styling
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin hover {
  &:hover { @content }
}

@mixin hover-focus {
  &:focus { @content }
  @include hover { @content }
}

// WebKit-style focus
@mixin tab-focus() {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// screen reader only
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Vendor prefixing for shorthand properties
@mixin vendor-prefixes($property, $value) {
        -webkit-#{$property}: $value;
        -moz-#{$property}: $value;
        -ms-#{$property}: $value;
        -o-#{$property}: $value;
        #{$property}: $value;
}

@mixin hide-button() {
  background-color: transparent;
  border: 0;
  outline: none;
}

// base style for close buttons
@mixin close($x, $y) {
  position: absolute;
  color: #fff;
  opacity: 0.6;
  line-height: 1;
  padding: 0;
  -webkit-appearance: none;
  @include hide-button();
  @include highlight();

  // increase selectable area, helps with mobile
  &:before {
    position:absolute;
    content:'';
    right:$x;
    left:$x;
    top:$y;
    bottom:$y;
  }
}

// Default style for tabs scroll icons
@mixin scroll-button {
  position: absolute;
  display: block !important;
  background-color: transparent;
  height: 25px;
  width: 25px;
  color: white;
}

/// Vertically centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin vertical-center {
  position: absolute;
  top: 50%;
  @include vendor-prefixes(transform, translateY(-50%));
}

/// Horizontally centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  @include vendor-prefixes(transform, translateX(-50%));
}

/// Absolutely centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  @include vendor-prefixes(transform, translate(-50%, -50%));
}

// calculate padding from aspect ratio
@mixin set-aspect-ratio($width, $height) {
  padding-top: 100% * ($height/$width);
}

// safari only
@mixin apply-to-safari-only ($selector) {
  // safari 7.1+
  _::-webkit-full-page-media, _:future, :root #{$selector} {
    @content;
  }

  // safari 9+
  @supports (overflow:-webkit-marquee) and (justify-content:inherit) {
    #{$selector} {
      @content;
    }
  }
}

// IE11 only
@mixin apply-to-ie11-only ($selector) {
  @media all and (-ms-high-contrast:none) {
    *::-ms-backdrop, #{$selector} {
      @content;
    }
  }
}

// Firefox only
@mixin apply-to-firefox-only ($selector) {
  @-moz-document url-prefix() {
    #{$selector} {
      @content;
    }
  }
}

// flexbox prefixing
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

@mixin expand() {
  position:absolute;
  width:100%;
  height:100%;
  top:0;
  left:0;
}


// $grow {Number} - flex grow factor (applies to: flex items)
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// $width {String} - the initial main size of the flex item (applies to: flex itemsnitial main size of the flex item)
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// $direction {String} - flex Flow Direction : row | row-reverse | column | column-reverse (applies to: flex containers)
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// $values {String} - applies to: flex items : <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex shrink {Number}: applies to flex item shrink factor
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

@mixin flex-center-children($flex-direction) {
  @include flexbox;
  @include flex-direction($flex-direction);
  @include justify-content(center);
  @include align-items(center);
}

@mixin hyphens() {
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}

@function get-direction($direction) {
  $direction-map: (
    "left": "to right",
    "right": "to left",
    "bottom": "to top",
    "top": "to bottom"
  );

  @if map-has-key($direction-map, $direction) {
    @return map-get($direction-map, $direction);
  }
  @return $direction;
}

@mixin linear-gradient($direction:left, $color-from:#000000, $color-to:#FFFFFF, $gradient-type:0) {
  background-image: -moz-linear-gradient($direction, rgba($color-from,0.6) 0%, rgba($color-to,0) 100%);
  background-image: -webkit-linear-gradient($direction, rgba($color-from,0.6) 0%,rgba($color-to,0) 100%);
  background-image: linear-gradient(get-direction($direction), rgba($color-from,0.6) 0%,rgba($color-to,0) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=#{$gradient-type}, StartColorStr=#{$color-from}, EndColorStr=#{$color-to});
}
